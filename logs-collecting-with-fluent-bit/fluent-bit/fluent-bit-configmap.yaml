apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: logging
  labels:
    k8s-app: fluent-bit
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     info
        Daemon        Off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

    @INCLUDE input-kubernetes.conf
    @INCLUDE filter-kubernetes.conf
    @INCLUDE filter-resultcode.conf
    @INCLUDE output-elasticsearch.conf

  input-kubernetes.conf: |
    [INPUT]
      Name              tail
      Tag               kube.*
      Path              /var/log/containers/*.log
      Parser            docker
      Mem_Buf_Limit     5MB
      Skip_Long_Lines   On
      Refresh_Interval  10

  filter-kubernetes.conf: |
    [FILTER]
      Name                kubernetes
      Match               kube.*
      Kube_URL            https://kubernetes.default.svc.cluster.local:443
      Merge_Log           On
      K8S-Logging.Parser  On
      K8S-Logging.Exclude On

    # Parse Apache logs into structured fields
    [FILTER]
      Name       parser
      Match      kube.*
      Key_Name   log
      Parser     apache
      Reserve_Data On

  filter-resultcode.conf: |
    [FILTER]
      Name        lua
      Match       kube.*
      script      resultCodeFilter.lua
      call        filter_by_annotation

  output-elasticsearch.conf: |
    [OUTPUT]
      Name            es
      Match           *
      Host            10.105.123.210
      Port            9200
      HTTP_User       elastic
      HTTP_Passwd     NxMBB0aBo2dIagCsAX5S
      Logstash_Format On
      Retry_Limit     False
      Buffer_Size     False
  
  parsers.conf: |
    [PARSER]
      Name   apache
      Format regex
      Regex  ^(?<client_ip>\d+\.\d+\.\d+\.\d+) - - \[(?<time>[^\]]*)\] "(?<method>[A-Z]+) (?<path>[^ ]*) HTTP/(?<http_version>[^"]+)" (?<status>[0-9]+) (?<size>[0-9]+)
      Time_Key   time
      Time_Format %d/%b/%Y:%H:%M:%S %z

  resultCodeFilter.lua: |
    function filter_by_annotation(tag, ts, record)
        local status = record["status"]
        if record["kubernetes"] ~= nil and record["kubernetes"]["annotations"] ~= nil then
            local annotations = record["kubernetes"]["annotations"]
            local filterSpec = annotations["fluentbit.io/resultCodeFilter"]
            if filterSpec ~= nil and status ~= nil then
                local statusStr = tostring(status)
                if string.find("," .. filterSpec .. ",", "," .. statusStr .. ",") then
                    return 1, record  -- keep log
                end
            end
        end
        return -1, record  -- drop otherwise
    end
